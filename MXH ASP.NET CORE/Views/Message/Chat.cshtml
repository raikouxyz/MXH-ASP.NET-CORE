@{
    ViewData["Title"] = $"Chat với {ViewBag.Receiver.FullName}";
    var receiver = ViewBag.Receiver;
    var messages = ViewBag.Messages;
}

<div class="container py-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <!-- Header -->
                <div class="card-header bg-white py-3">
                    <div class="d-flex align-items-center">
                        <img src="@receiver.ProfilePicture" alt="Avatar" class="rounded-circle me-2" style="width: 40px; height: 40px; object-fit: cover;">
                        <div>
                            <h5 class="mb-0">@receiver.FullName</h5>
                            <small class="text-muted">@receiver.Username</small>
                        </div>
                    </div>
                </div>

                <!-- Messages -->
                <div class="card-body chat-messages" id="messageContainer">
                    @foreach (var message in messages)
                    {
                        <div class="message-wrapper @(message.IsSender ? "message-sent" : "message-received")">
                            <div class="message">
                                <div class="message-content">
                                    @message.Content
                                </div>
                                <div class="message-time">
                                    @message.CreatedAt.ToString("HH:mm")
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Input -->
                <div class="card-footer bg-white">
                    <form id="messageForm" class="d-flex gap-2">
                        <input type="hidden" id="receiverId" value="@receiver.Id" />
                        <input type="hidden" id="lastMessageId" value="@(messages.Count > 0 ? messages[messages.Count - 1].Id : 0)" />
                        <div class="input-group">
                            <input type="text" id="messageInput" class="form-control" placeholder="Nhập tin nhắn..." />
                            <button type="button" class="btn btn-outline-secondary" id="emojiButton">
                                <i class="far fa-smile"></i>
                            </button>
                        </div>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-paper-plane"></i>
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/emoji-picker-element@1.12.1/index.css" />
    <style>
        .chat-messages {
            height: 500px;
            overflow-y: auto;
            padding: 1rem;
            background-color: #f8f9fa;
        }

        .message-wrapper {
            display: flex;
            margin-bottom: 1rem;
        }

        .message-wrapper.message-sent {
            justify-content: flex-end;
        }

        .message {
            max-width: 70%;
        }

        .message-content {
            padding: 0.75rem 1rem;
            border-radius: 1rem;
            position: relative;
            word-wrap: break-word;
        }

        .message-sent .message-content {
            background-color: #007bff;
            color: white;
            border-bottom-right-radius: 0.25rem;
        }

        .message-received .message-content {
            background-color: white;
            border: 1px solid #dee2e6;
            border-bottom-left-radius: 0.25rem;
        }

        .message-time {
            font-size: 0.75rem;
            color: #6c757d;
            margin-top: 0.25rem;
            text-align: right;
        }

        emoji-picker {
            position: absolute;
            bottom: 100%;
            right: 0;
            z-index: 1000;
        }

        #messageInput {
            border-radius: 1.5rem;
            padding-left: 1rem;
            padding-right: 1rem;
        }

        #emojiButton {
            border-radius: 1.5rem;
            margin-left: 0.5rem;
        }

        .btn-primary {
            border-radius: 1.5rem;
            padding-left: 1.5rem;
            padding-right: 1.5rem;
        }
    </style>
}

@section Scripts {
    <script type="module" src="https://cdn.jsdelivr.net/npm/emoji-picker-element@1.12.1/index.js"></script>
    <script>
        $(document).ready(function() {
            const messageContainer = $('#messageContainer');
            const messageForm = $('#messageForm');
            const messageInput = $('#messageInput');
            const receiverId = $('#receiverId').val();
            const lastMessageId = $('#lastMessageId');
            let emojiPicker = null;

            // Cuộn xuống tin nhắn mới nhất
            messageContainer.scrollTop(messageContainer[0].scrollHeight);

            // Khởi tạo emoji picker
            $('#emojiButton').click(function(e) {
                e.preventDefault();
                if (emojiPicker) {
                    emojiPicker.remove();
                    emojiPicker = null;
                    return;
                }

                emojiPicker = document.createElement('emoji-picker');
                emojiPicker.addEventListener('emoji-click', event => {
                    messageInput.val(messageInput.val() + event.detail.unicode);
                });

                $(this).parent().append(emojiPicker);
            });

            // Đóng emoji picker khi click ra ngoài
            $(document).on('click', function(e) {
                if (emojiPicker && !$(e.target).closest('.input-group, emoji-picker').length) {
                    emojiPicker.remove();
                    emojiPicker = null;
                }
            });

            // Gửi tin nhắn
            messageForm.submit(function(e) {
                e.preventDefault();
                const content = messageInput.val().trim();
                if (!content) return;

                $.ajax({
                    url: '/Message/Send',
                    type: 'POST',
                    data: {
                        receiverId: receiverId,
                        content: content,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            appendMessage(response.message);
                            messageInput.val('');
                            lastMessageId.val(response.message.id);
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function() {
                        alert('Có lỗi xảy ra khi gửi tin nhắn');
                    }
                });
            });

            // Kiểm tra tin nhắn mới
            function checkNewMessages() {
                $.get('/Message/GetNewMessages', {
                    userId: receiverId,
                    lastMessageId: lastMessageId.val()
                })
                .done(function(response) {
                    if (response.success && response.messages.length > 0) {
                        response.messages.forEach(function(message) {
                            appendMessage(message);
                        });
                        lastMessageId.val(response.messages[response.messages.length - 1].id);
                    }
                });
            }

            // Thêm tin nhắn vào container
            function appendMessage(message) {
                const messageHtml = `
                    <div class="message-wrapper ${message.isSender ? 'message-sent' : 'message-received'}">
                        <div class="message">
                            <div class="message-content">
                                ${message.content}
                            </div>
                            <div class="message-time">
                                ${message.createdAt}
                            </div>
                        </div>
                    </div>
                `;
                messageContainer.append(messageHtml);
                messageContainer.scrollTop(messageContainer[0].scrollHeight);
            }

            // Kiểm tra tin nhắn mới mỗi 3 giây
            setInterval(checkNewMessages, 3000);
        });
    </script>
} 