@model MXH_ASP.NET_CORE.ViewModels.CreatePostViewModel

@{
    ViewData["Title"] = "Bảng tin";
    var profilePicture = ViewBag.CurrentUserAvatar as string ?? "/uploads/avatars/default-avatar.svg";
    var userName = ViewBag.CurrentUserName as string ?? "";
    // Nếu cần userId, có thể truyền thêm từ controller vào ViewBag
    // var userId = ViewBag.CurrentUserId as int?;
    var profileUrl = Url.Action("Index", "Profile");
    ViewBag.CurrentUserAvatar = profilePicture;
}

<input type="hidden" id="current-user-avatar" value="@profilePicture" />

<div class="row mt-4">
    <!-- Sidebar bên trái -->
    <div class="col-lg-3 d-none d-lg-block ps-4">
        <div class="position-sticky" style="top: 2rem;">
            <!-- Menu chính -->
            <div class="card shadow-sm mb-4">
                <div class="card-body p-0">
                    <div class="list-group list-group-flush">
                        <a href="@Url.Action("Index", "Home")" class="list-group-item list-group-item-action active">
                            <i class="fas fa-home me-2"></i> Trang chủ
                        </a>
                        <a href="@Url.Action("Index", "Profile")" class="list-group-item list-group-item-action">
                            <i class="fas fa-user me-2"></i> Trang cá nhân
                        </a>
                        <a href="@Url.Action("Index", "Friend")" class="list-group-item list-group-item-action">
                            <i class="fas fa-users me-2"></i> Bạn bè
                        </a>
                        <a href="@Url.Action("Index", "Message")" class="list-group-item list-group-item-action">
                            <i class="fas fa-envelope me-2"></i> Tin nhắn
                            <span id="new-messages-badge" class="badge bg-danger rounded-pill d-none">0</span>
                        </a>
                        <a href="@Url.Action("Index", "Notification")" class="list-group-item list-group-item-action">
                            <i class="fas fa-bell me-2"></i> Thông báo
                        </a>
                    </div>
                </div>
            </div>

            <!-- Danh sách bạn bè -->
            <div class="card shadow-sm">
                <div class="card-header bg-white d-flex justify-content-between align-items-center">
                    <h6 class="mb-0">Danh sách bạn bè</h6>
                    <a asp-controller="Friend" asp-action="Index" class="text-decoration-none small">
                        Xem tất cả
                    </a>
                </div>
                <div class="card-body p-0">
                    <div id="friends-list-container">
                        <div class="text-center py-3">
                            <div class="spinner-border spinner-border-sm text-primary" role="status">
                                <span class="visually-hidden">Đang tải...</span>
                            </div>
                            <p class="mb-0 small">Đang tải danh sách bạn bè...</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Cột giữa - Danh sách bài viết -->
    <div class="col-12 col-lg-6 px-4">
        <!-- Kiểm tra thông báo thành công -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show mb-3" role="alert">
                <i class="fas fa-check-circle me-2"></i>
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <!-- Kiểm tra thông báo lỗi -->
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show mb-3" role="alert">
                <i class="fas fa-exclamation-circle me-2"></i>
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <!-- Form tạo bài viết mới -->
        <partial name="_CreatePostPartial" model="Model" />

        <!-- Danh sách bài viết -->
        <div id="posts-container">
            <!-- Nội dung bài viết sẽ được tải bằng Ajax -->
            <div class="text-center py-5" id="loading-spinner">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Đang tải...</span>
                </div>
                <p class="mt-2">Đang tải bài viết...</p>
            </div>
        </div>

        <!-- Nút tải thêm -->
        <div class="text-center my-4" id="load-more-container" style="display: none;">
            <button class="btn btn-light border" id="load-more-btn" onclick="loadMorePosts()">
                <i class="fas fa-sync-alt me-2"></i> Tải thêm bài viết
            </button>
        </div>
    </div>

    <!-- Cột phải - Danh sách bạn bè -->
    <div class="col-lg-3 d-none d-lg-block pe-4">
        <div class="position-sticky" style="top: 2rem;">
            <div class="card shadow-sm">
                <div class="card-header bg-white">
                    <h6 class="mb-0">Gợi ý kết bạn</h6>
                </div>
                <div class="card-body p-0">
                    <div id="suggested-friends-container">
                        <div class="text-center py-3">
                            <div class="spinner-border spinner-border-sm text-primary" role="status">
                                <span class="visually-hidden">Đang tải...</span>
                            </div>
                            <p class="mb-0 small">Đang tải gợi ý...</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Biến toàn cục để theo dõi trạng thái phân trang
        var currentPage = 1;
        var pageSize = 5;
        var hasMorePosts = true;
        var profileBaseUrl = '@Url.Action("Index", "Profile")';
        
        // Tự động tải bài viết khi trang được tải
        $(document).ready(function() {
            loadPosts();
            loadFriendsList();
            checkNewMessagesCount(); // Kiểm tra lần đầu khi tải trang
            
            // Tự động đóng thông báo sau 5 giây
            setTimeout(function() {
                $('.alert').alert('close');
            }, 5000);

            // Kiểm tra tin nhắn mới mỗi 10 giây
            setInterval(checkNewMessagesCount, 10000); 
        });
        
        // Hàm tải bài viết
        function loadPosts() {
            $.ajax({
                url: '@Url.Action("GetPosts", "Post")',
                type: 'GET',
                data: {
                    page: currentPage,
                    pageSize: pageSize
                },
                success: function(data) {
                    // Ẩn loading spinner
                    $('#loading-spinner').hide();
                    
                    // Kiểm tra nếu không có bài viết nào
                    if (data.length === 0) {
                        if (currentPage === 1) {
                            $('#posts-container').html('<div class="text-center py-5"><p class="text-muted">Chưa có bài viết nào. Hãy là người đầu tiên đăng bài!</p></div>');
                        }
                        hasMorePosts = false;
                    } else {
                        // Render các bài viết
                        data.forEach(function(post) {
                            renderPost(post);
                        });
                        
                        // Kiểm tra nếu còn bài viết để tải
                        if (data.length < pageSize) {
                            hasMorePosts = false;
                        } else {
                            $('#load-more-container').show();
                        }
                    }
                    
                    // Cập nhật hiển thị nút tải thêm
                    updateLoadMoreButton();
                },
                error: function(error) {
                    $('#loading-spinner').hide();
                    $('#posts-container').html('<div class="alert alert-danger">Không thể tải bài viết. Vui lòng thử lại sau.</div>');
                    console.error('Error fetching posts:', error);
                }
            });
        }
        
        // Hàm render bài viết
        function renderPost(post) {
            var imgSrc = post.profilePicture || '/uploads/avatars/default-avatar.svg';
            var dateCreated = new Date(post.createdAt).toLocaleString('vi-VN');
            var dateTitle = post.updatedAt ? "Đã chỉnh sửa vào " + new Date(post.updatedAt).toLocaleString('vi-VN') : "";
            var dateDisplay = post.updatedAt ? dateCreated + " (đã chỉnh sửa)" : dateCreated;
            
            // Tạo các phần của dropdown menu
            var editLink = '';
            if (post.canEdit) {
                editLink = '<li><a class="dropdown-item" href="/Post/Edit/' + post.id + '"><i class="fas fa-pencil-alt me-2"></i> Chỉnh sửa</a></li>';
            }
            
            var deleteBtn = '';
            if (post.canDelete) {
                deleteBtn = '<li><form action="/Post/Delete" method="post" class="d-inline" onsubmit="return confirm(\'Bạn có chắc chắn muốn xóa bài viết này không?\');"><input type="hidden" name="id" value="' + post.id + '" /><input type="hidden" name="__RequestVerificationToken" value="' + $('input[name="__RequestVerificationToken"]').val() + '" /><button type="submit" class="dropdown-item text-danger"><i class="fas fa-trash-alt me-2"></i> Xóa</button></form></li>';
            }
            
            var dropdownMenu = '';
            if (post.canEdit || post.canDelete) {
                dropdownMenu = '<div class="dropdown"><button class="btn btn-light btn-sm rounded-circle" type="button" id="dropdownMenuButton-' + post.id + '" data-bs-toggle="dropdown" aria-expanded="false"><i class="fas fa-ellipsis-v"></i></button><ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton-' + post.id + '">' + editLink + deleteBtn + '</ul></div>';
            }
            
            var imageElement = '';
            if (post.imageUrl) {
                imageElement = '<img src="' + post.imageUrl + '" class="img-fluid rounded mb-3" alt="Post image">';
            }
            
            var likeCount = '';
            if (post.likeCount > 0) {
                likeCount = '<span><i class="fas fa-thumbs-up text-primary"></i> ' + post.likeCount + '</span>';
            }
            
            var commentCount = '';
            if (post.commentCount > 0) {
                commentCount = '<span>' + post.commentCount + ' bình luận</span>';
            }
            
            var likeButtonClass = post.isLiked ? 'text-primary' : '';
            var likeIconClass = post.isLiked ? 'fa-thumbs-up-fill' : 'fa-thumbs-up';
            
            // Lấy biến từ Razor và chuyển sang JavaScript - lưu ý phải dùng đúng cú pháp để lấy giá trị thực
            var profilePictureValue = '@(profilePicture)';
            
            // Xây dựng HTML cho bài viết
            var postHtml = '<div class="card shadow-sm mb-4 post-card" id="post-' + post.id + '">';
            
            // Phần đầu
            postHtml += '<div class="card-header bg-white d-flex justify-content-between align-items-center border-0 pb-0">';
            postHtml += '<div class="d-flex align-items-center">';
            postHtml += '<img src="' + imgSrc + '" class="rounded-circle me-2" alt="Avatar" style="width: 40px; height: 40px; object-fit: cover;">';
            postHtml += '<div>';
            postHtml += '<h6 class="mb-0 fw-bold"><a href="' + profileBaseUrl + '/' + post.userId + '" class="text-dark text-decoration-none">' + post.userFullName + '</a></h6>';
            postHtml += '<small class="text-muted">';
            
            if (post.updatedAt) {
                postHtml += '<span title="' + dateTitle + '">' + dateDisplay + '</span>';
            } else {
                postHtml += dateDisplay;
            }
            
            postHtml += '</small>';
            postHtml += '</div>';
            postHtml += '</div>';
            postHtml += dropdownMenu;
            postHtml += '</div>';
            
            // Phần thân
            postHtml += '<div class="card-body">';
            postHtml += '<a href="/Post/Detail/' + post.id + '" class="text-dark text-decoration-none">';
            postHtml += '<p class="card-text">' + post.content + '</p>';
            if (post.imageUrl) {
                postHtml += '<img src="' + post.imageUrl + '" class="img-fluid rounded mb-3" alt="Post image">';
            }
            postHtml += '</a>';
            postHtml += '<div class="d-flex justify-content-between text-muted small mb-2">';
            postHtml += '<div>' + likeCount + '</div>';
            postHtml += '<div>' + commentCount + '</div>';
            postHtml += '</div>';
            postHtml += '<hr>';
            
            // Phần nút
            postHtml += '<div class="d-flex justify-content-around">';
            postHtml += '<button class="btn btn-light flex-fill me-1 ' + likeButtonClass + '" id="likeBtn-' + post.id + '" onclick="likePost(' + post.id + ')">';
            postHtml += '<i class="fas ' + likeIconClass + '"></i> Thích';
            postHtml += '</button>';
            postHtml += '<button class="btn btn-light flex-fill ms-1" id="commentBtn-' + post.id + '" onclick="focusComment(' + post.id + ')">';
            postHtml += '<i class="fas fa-comment"></i> Bình luận';
            postHtml += '</button>';
            postHtml += '</div>';
            postHtml += '<hr>';
            
            // Phần comment
            postHtml += '<div class="comments-section" id="comments-' + post.id + '">';
            postHtml += '<!-- Hiển thị các bình luận ở đây -->';
            postHtml += '</div>';
            postHtml += '<div class="d-flex mt-3">';
            postHtml += '<img src="' + profilePictureValue + '" class="rounded-circle me-2" alt="Avatar" style="width: 32px; height: 32px; object-fit: cover;">';
            postHtml += '<div class="flex-grow-1">';
            postHtml += '<div class="input-group">';
            postHtml += '<input type="text" class="form-control rounded-pill" placeholder="Viết bình luận..." id="commentInput-' + post.id + '">';
            postHtml += '<button class="btn btn-primary rounded-circle ms-2" type="button" onclick="addComment(' + post.id + ')">';
            postHtml += '<i class="fas fa-paper-plane"></i>';
            postHtml += '</button>';
            postHtml += '</div>';
            postHtml += '</div>';
            postHtml += '</div>';
            postHtml += '</div>';
            postHtml += '</div>';
            
            $('#posts-container').append(postHtml);
        }
        
        // Hàm tải thêm bài viết
        function loadMorePosts() {
            if (!hasMorePosts) return;
            
            currentPage++;
            
            // Hiển thị loading
            $('#load-more-btn').html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang tải...');
            
            // Tải bài viết mới
            loadPosts();
        }
        
        // Cập nhật trạng thái nút tải thêm
        function updateLoadMoreButton() {
            if (hasMorePosts) {
                $('#load-more-btn').html('<i class="fas fa-sync-alt me-2"></i> Tải thêm bài viết');
                $('#load-more-container').show();
            } else {
                $('#load-more-container').hide();
            }
        }
        
        // Hàm yêu thích bài viết
        function likePost(postId) {
            $.ajax({
                url: '/api/Like/' + postId,
                type: 'POST',
                headers: {
                    'RequestVerificationToken': $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function(data) {
                    if (data.success) {
                        // Cập nhật UI
                        var likeBtn = $('#likeBtn-' + postId);
                        var likeIcon = likeBtn.find('i');
                        
                        if (data.liked) {
                            likeBtn.addClass('text-primary');
                            likeIcon.removeClass('fa-thumbs-up').addClass('fa-thumbs-up-fill');
                        } else {
                            likeBtn.removeClass('text-primary');
                            likeIcon.removeClass('fa-thumbs-up-fill').addClass('fa-thumbs-up');
                        }
                        
                        // Cập nhật số lượt thích
                        var likeCountElem = $('#post-' + postId + ' .card-body > .d-flex.justify-content-between.text-muted.small.mb-2 > div:first-child');
                        if (data.likeCount > 0) {
                            likeCountElem.html('<span><i class="fas fa-thumbs-up text-primary"></i> ' + data.likeCount + '</span>');
                        } else {
                            likeCountElem.html('');
                        }
                    } else {
                        console.error('Error liking post:', data.message);
                    }
                },
                error: function(error) {
                    console.error('Error liking post:', error);
                }
            });
        }
        
        // Hàm focus vào ô comment
        function focusComment(postId) {
            loadComments(postId);
            $('#commentInput-' + postId).focus();
        }
        
        // Hàm tải bình luận
        function loadComments(postId) {
            $.ajax({
                url: '/api/Comment/post/' + postId,
                type: 'GET',
                success: function(data) {
                    if (data.success) {
                        var commentsSection = $('#comments-' + postId);
                        commentsSection.empty();
                        
                        // Nếu không có bình luận
                        if (data.comments.length === 0) {
                            commentsSection.html('<p class="text-muted text-center small my-2">Chưa có bình luận nào.</p>');
                            return;
                        }
                        
                        // Render bình luận
                        data.comments.forEach(function(comment) {
                            var imgSrc = comment.profilePicture || '/uploads/avatars/default-avatar.svg';
                            var dateCreated = new Date(comment.createdAt).toLocaleString('vi-VN');
                            var dateTitle = comment.updatedAt ? "Đã chỉnh sửa vào " + new Date(comment.updatedAt).toLocaleString('vi-VN') : "";
                            var dateDisplay = comment.updatedAt ? dateCreated + " (đã chỉnh sửa)" : dateCreated;
                            
                            // Tạo nút chỉnh sửa
                            var editButton = '';
                            if (comment.canEdit) {
                                editButton = '<li><button class="dropdown-item" onclick="editComment(' + comment.id + ', \'' + comment.content.replace(/'/g, "\\'") + '\')">' +
                                    '<i class="fas fa-pencil-alt me-2"></i> Chỉnh sửa' +
                                '</button></li>';
                            }
                            
                            // Tạo nút xóa
                            var deleteButton = '';
                            if (comment.canDelete) {
                                deleteButton = '<li><button class="dropdown-item text-danger" onclick="deleteComment(' + comment.id + ')">' +
                                    '<i class="fas fa-trash-alt me-2"></i> Xóa' +
                                '</button></li>';
                            }
                            
                            // Tạo dropdown menu
                            var dropdownMenu = '';
                            if (comment.canEdit || comment.canDelete) {
                                dropdownMenu = '<div class="dropdown">' +
                                    '<button class="btn btn-sm text-muted p-0" type="button" data-bs-toggle="dropdown" aria-expanded="false">' +
                                    '<i class="fas fa-ellipsis-h"></i>' +
                                    '</button>' +
                                    '<ul class="dropdown-menu dropdown-menu-end">' +
                                    editButton +
                                    deleteButton +
                                    '</ul>' +
                                    '</div>';
                            }
                            
                            // Tạo cấu trúc bình luận
                            var commentHtml = '<div class="comment d-flex mb-2" id="comment-' + comment.id + '">';
                            commentHtml += '<img src="' + imgSrc + '" class="rounded-circle me-2" alt="Avatar" style="width: 32px; height: 32px; object-fit: cover;">';
                            commentHtml += '<div class="comment-content p-2 rounded bg-light flex-grow-1">';
                            commentHtml += '<div class="d-flex justify-content-between align-items-center">';
                            commentHtml += '<h6 class="mb-0 fw-bold"><a href="' + profileBaseUrl + '/' + comment.userId + '" class="text-dark text-decoration-none">' + comment.userFullName + '</a></h6>';
                            commentHtml += dropdownMenu;
                            commentHtml += '</div>';
                            commentHtml += '<p class="mb-0 comment-text">' + comment.content + '</p>';
                            commentHtml += '<small class="text-muted">';
                            
                            if (comment.updatedAt) {
                                commentHtml += '<span title="' + dateTitle + '">' + dateDisplay + '</span>';
                            } else {
                                commentHtml += dateDisplay;
                            }
                            
                            commentHtml += '</small>';
                            commentHtml += '</div>';
                            commentHtml += '</div>';
                            commentHtml += '</div>';
                            
                            commentsSection.append(commentHtml);
                        });
                        
                        // Cập nhật số lượng bình luận
                        var commentCountElem = $('#post-' + postId + ' .card-body > .d-flex.justify-content-between.text-muted.small.mb-2 > div:last-child');
                        commentCountElem.html('<span>' + data.comments.length + ' bình luận</span>');
                    } else {
                        console.error('Error loading comments:', data.message);
                    }
                },
                error: function(error) {
                    console.error('Error loading comments:', error);
                    $('#comments-' + postId).html('<p class="text-danger">Không thể tải bình luận. Vui lòng thử lại sau.</p>');
                }
            });
        }
        
        // Hàm thêm bình luận
        function addComment(postId) {
            var commentText = $('#commentInput-' + postId).val().trim();
            if (!commentText) return;
            
            $.ajax({
                url: '/api/Comment',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    content: commentText,
                    postId: postId
                }),
                headers: {
                    'RequestVerificationToken': $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function(data) {
                    if (data.success) {
                        // Xóa nội dung input
                        $('#commentInput-' + postId).val('');
                        
                        // Tải lại bình luận
                        loadComments(postId);
                    } else {
                        console.error('Error adding comment:', data.message);
                    }
                },
                error: function(error) {
                    console.error('Error adding comment:', error);
                }
            });
        }
        
        // Hàm chỉnh sửa bình luận
        function editComment(commentId, content) {
            // Hiển thị modal chỉnh sửa
            if (!$('#editCommentModal').length) {
                var modalHtml = '<div class="modal fade" id="editCommentModal" tabindex="-1" aria-hidden="true">';
                modalHtml += '<div class="modal-dialog">';
                modalHtml += '<div class="modal-content">';
                modalHtml += '<div class="modal-header">';
                modalHtml += '<h5 class="modal-title">Chỉnh sửa bình luận</h5>';
                modalHtml += '<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>';
                modalHtml += '</div>';
                modalHtml += '<div class="modal-body">';
                modalHtml += '<textarea id="editCommentContent" class="form-control" rows="3"></textarea>';
                modalHtml += '<input type="hidden" id="editCommentId" />';
                modalHtml += '</div>';
                modalHtml += '<div class="modal-footer">';
                modalHtml += '<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>';
                modalHtml += '<button type="button" class="btn btn-primary" onclick="updateComment()">Lưu thay đổi</button>';
                modalHtml += '</div>';
                modalHtml += '</div>';
                modalHtml += '</div>';
                modalHtml += '</div>';
                
                $('body').append(modalHtml);
            }
            
            $('#editCommentId').val(commentId);
            $('#editCommentContent').val(content);
            
            // Hiển thị modal
            var modal = new bootstrap.Modal(document.getElementById('editCommentModal'));
            modal.show();
        }
        
        // Hàm cập nhật bình luận
        function updateComment() {
            var commentId = $('#editCommentId').val();
            var content = $('#editCommentContent').val().trim();
            
            if (!content) return;
            
            $.ajax({
                url: '/api/Comment/' + commentId,
                type: 'PUT',
                contentType: 'application/json',
                data: JSON.stringify({
                    content: content,
                    postId: 0 // Không quan trọng trong trường hợp cập nhật
                }),
                headers: {
                    'RequestVerificationToken': $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function(data) {
                    if (data.success) {
                        // Đóng modal
                        $('#editCommentModal').modal('hide');
                        
                        // Tìm bài viết của bình luận này
                        var post = $('#comment-' + commentId).closest('.post-card');
                        var postId = post.attr('id').replace('post-', '');
                        
                        // Tải lại bình luận
                        loadComments(postId);
                    } else {
                        console.error('Error updating comment:', data.message);
                    }
                },
                error: function(error) {
                    console.error('Error updating comment:', error);
                }
            });
        }
        
        // Hàm xóa bình luận
        function deleteComment(commentId) {
            if (!confirm('Bạn có chắc chắn muốn xóa bình luận này không?')) return;
            
            $.ajax({
                url: '/api/Comment/' + commentId,
                type: 'DELETE',
                headers: {
                    'RequestVerificationToken': $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function(data) {
                    if (data.success) {
                        // Tìm bài viết của bình luận này
                        var post = $('#comment-' + commentId).closest('.post-card');
                        var postId = post.attr('id').replace('post-', '');
                        
                        // Tải lại bình luận
                        loadComments(postId);
                    } else {
                        console.error('Error deleting comment:', data.message);
                    }
                },
                error: function(error) {
                    console.error('Error deleting comment:', error);
                }
            });
        }

        // Hàm tải danh sách bạn bè
        function loadFriendsList() {
            $.ajax({
                url: '/Friend/GetFriends',
                type: 'GET',
                success: function(data) {
                    if (data.success) {
                        var container = $('#friends-list-container');
                        container.empty();
                        
                        if (data.friends.length === 0) {
                            container.html('<p class="text-muted small text-center py-3">Bạn chưa có bạn bè nào.</p>');
                            return;
                        }
                        
                        // Hiển thị tối đa 5 bạn bè
                        var friends = data.friends.slice(0, 5);
                        
                        friends.forEach(function(friend) {
                            // Render từng mục bạn bè sử dụng hàm riêng
                            renderFriendItem(friend, container);
                        });

                    } else {
                        $('#friends-list-container').html('<p class="text-muted small text-center py-3">Không thể tải danh sách bạn bè.</p>');
                    }
                },
                error: function() {
                    $('#friends-list-container').html('<p class="text-muted small text-center py-3">Không thể tải danh sách bạn bè.</p>');
                }
            });
        }

        // Hàm render từng mục bạn bè và gán sự kiện nhắn tin
        function renderFriendItem(friend, containerElement) {
            // Bỏ qua nếu userId không hợp lệ
            if (!friend.userId || friend.userId <= 0) {
                console.warn('Skipping friend with invalid userId:', friend);
                return; // Bỏ qua mục này
            }

            var imgSrc = friend.profilePicture || '/uploads/avatars/default-avatar.svg';
            
            var friendHtml = '<div class="d-flex align-items-center p-3 border-bottom">';
            friendHtml += '<img src="' + imgSrc + '" class="rounded-circle me-2" alt="' + friend.fullName + '" style="width: 40px; height: 40px; object-fit: cover;">';
            friendHtml += '<div class="flex-grow-1 min-width-0">';
            // Bọc tên và username bằng thẻ a link đến trang cá nhân
            friendHtml += '<a href="/Profile/Index/' + friend.userId + '" class="text-dark text-decoration-none">';
            friendHtml += '<h6 class="mb-0 fw-bold text-truncate">' + friend.fullName + '</h6>';
            friendHtml += '<p class="mb-0 small text-muted text-truncate">' + '\u0040' + friend.username + '</p>';
            friendHtml += '</a>';
            friendHtml += '</div>';
            
            friendHtml += '</div>'; // Đóng div flex

            // Tạo JQuery object từ HTML string
            var friendElement = $(friendHtml);
            // Không cần append button nữa
            // friendElement.append(messageButton);

            containerElement.append(friendElement);
        }

        // Hàm kiểm tra tin nhắn mới và hiển thị thông báo tên người gửi
        function checkNewMessagesCount() {
            $.get('/Message/CheckNewMessagesCount')
                .done(function(response) {
                    const badge = $('#new-messages-badge');
                    if (response.success && response.count > 0) {
                        badge.text(response.count).removeClass('d-none');
                        
                        // Tạo tooltip hiển thị tên người gửi
                        const senderNames = response.senders.map(s => s.SenderName).join(', ');
                        const tooltipTitle = `Tin nhắn mới từ: ${senderNames}`;

                        // Cập nhật tooltip cho thẻ a 'Nhắn tin'
                        $('.nav-link.ps-0.text-dark.d-flex.align-items-center.justify-content-between').attr('title', tooltipTitle);
                        
                    } else {
                        badge.addClass('d-none').text('');
                        // Xóa tooltip khi không có tin nhắn mới
                        $('.nav-link.ps-0.text-dark.d-flex.align-items-center.justify-content-between').removeAttr('title');
                    }
                });
        }
    </script>
}
